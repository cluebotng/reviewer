---
# The primary process (interface) runs as a "web service" which is separate from a "job",
# see `service.template` for the equivalent settings for the web interface.
#
# Here are the "backend" jobs, both scheduled (aka cron jobs) and worker (celery).
#

# Async support

## Redis instance
- name: redis
  image: tool-containers/redis:latest
  command: server
  continuous: true

## Celery worker
- name: celery-worker
  image: '{{ target_image }}'
  command: run-celery
  continuous: true
  filelog: true
  mount: all
  filelog-stdout: logs/celery-worker.stdout.log
  filelog-stderr: logs/celery-worker.stderr.log

# Scheduled jobs

## Core jobs
- name: export-statistics
  command: ./manage.py export_statistics
  image: '{{ target_image }}'
  schedule: '13 9 * * *'
  filelog: true
  mount: all
  filelog-stdout: logs/export-statistics.stdout.log
  filelog-stderr: logs/export-statistics.stderr.log

- name: update-edit-classifications
  command: ./manage.py update_edit_classification
  image: '{{ target_image }}'
  schedule: '30 */2 * * *'
  filelog: true
  mount: all
  filelog-stdout: logs/update-edit-classifications.stdout.log
  filelog-stderr: logs/update-edit-classifications.stderr.log

## Seed jobs
- name: add-reported-edits
  command: ./manage.py add_reported_edits
  image: '{{ target_image }}'
  schedule: '55 * * * *'
  filelog: true
  mount: all
  filelog-stdout: logs/add-reported-edits.stdout.log
  filelog-stderr: logs/add-reported-edits.stderr.log

- name: add-edits-to-queue
  command: ./manage.py add_edits_to_queue
  image: '{{ target_image }}'
  schedule: '13 6 * * *'
  filelog: true
  mount: all
  filelog-stdout: logs/add-edits-to-queue.stdout.log
  filelog-stderr: logs/add-edits-to-queue.stderr.log

## Helper jobs
- name: add-reviews-from-report
  command: ./manage.py add_reviews_from_report
  image: '{{ target_image }}'
  schedule: '15 * * * *'
  filelog: true
  mount: all
  filelog-stdout: logs/add-reviews-from-report.stdout.log
  filelog-stderr: logs/add-reviews-from-report.stderr.log

- name: add-reviews-from-huggle
  command: ./manage.py add_reviews_from_huggle
  image: '{{ target_image }}'
  schedule: '23 */2 * * *'
  filelog: true
  mount: all
  filelog-stdout: logs/add-reviews-from-huggle.stdout.log
  filelog-stderr: logs/add-reviews-from-huggle.stderr.log

## Back-fill jobs
- name: import-training-data
  command: ./manage.py import_training_data
  image: '{{ target_image }}'
  schedule: '15 2 * * *'
  filelog: true
  mount: all
  filelog-stdout: logs/import-training-data.stdout.log
  filelog-stderr: logs/import-training-data.stderr.log

- name: update-edit-deletion
  command: ./manage.py update_edit_deletion
  image: '{{ target_image }}'
  schedule: '13 4 * * 1'
  filelog: true
  mount: all
  filelog-stdout: logs/update-edit-deletion.stdout.log
  filelog-stderr: logs/update-edit-deletion.stderr.log

## Management jobs
- name: cleanup-user-records
  command: ./manage.py cleanup_user_records
  image: '{{ target_image }}'
  schedule: '13 1 * * *'
  filelog: true
  mount: all
  filelog-stdout: logs/cleanup-user-records.stdout.log
  filelog-stderr: logs/cleanup-user-records.stderr.log

# Extra jobs we run, beyond those directly related to the interface

## Backups
- name: backup-database
  command: bash -c 'mkdir -p {{ tool_dir }}/mysql_backups/ && mysqldump --defaults-file={{ tool_dir }}/replica.my.cnf -h tools-db {{ database_user }}__reviewer | gzip -9 > {{ tool_dir }}/mysql_backups/$(date +"%Y%m%dT%H%M%S").sql.gz'
  image: mariadb
  schedule: '45 */2 * * *'
  filelog: true
  mount: all
  filelog-stdout: logs/backup-database.stdout.log
  filelog-stderr: logs/backup-database.stderr.log

- name: prune-backups
  command: bash -c 'find "{{ tool_dir }}/mysql_backups" -mtime +3 -delete'
  image: bookworm
  schedule: '30 5 * * *'
  filelog: true
  mount: all
  filelog-stdout: logs/prune-backups.stdout.log
  filelog-stderr: logs/prune-backups.stderr.log
