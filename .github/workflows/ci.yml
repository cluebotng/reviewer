name: CI
on: { pull_request: { } }
concurrency:
  group: ${{ github.head_ref || github.ref }}
  cancel-in-progress: true
jobs:
  tox:
    strategy:
      fail-fast: false
      matrix:
        target:
          - ruff
          - djlint
          - bandit
          - black
          - test-unit
          - test-replica
          - test-integration
          - test-interactive
    runs-on: ubuntu-latest
    continue-on-error: true

    services:
      selenium:
        image: ${{ matrix.target == 'test-interactive' && 'selenium/standalone-chrome' || '' }}
        options: --shm-size=2gb

      mysql:
        image: ${{ startswith(matrix.target, 'test-') && 'mariadb' || '' }}
        env: { "MARIADB_ALLOW_EMPTY_ROOT_PASSWORD": "1" }
        ports: [3306:3306]

      redis:
        image: ${{ startswith(matrix.target, 'test-') && 'redis' || '' }}
        ports: [6379:6379]

    steps:
      - name: Wait for database container
        run: |
          until mysqladmin ping -h 127.0.0.1 -u root --silent;
          do
            sleep 1
          done
        if: startswith(matrix.target, 'test-')

      - name: Setup database access
        run: |
          # User specified in config
          mysql -h 127.0.0.1 -u root -e 'CREATE USER `cbng_reviewer`@`%` IDENTIFIED BY ""'

          # Default schema pattern
          mysql -h 127.0.0.1 -u root -e 'GRANT ALL PRIVILEGES ON `test_cbng_reviewer`.* TO `cbng_reviewer`@`%`'
          mysql -h 127.0.0.1 -u root -e 'GRANT ALL PRIVILEGES ON `test_enwiki_p`.* TO `cbng_reviewer`@`%`'

          # Parallel / custom pattern
          mysql -h 127.0.0.1 -u root -e 'GRANT ALL PRIVILEGES ON `test_cbng_reviewer_%`.* TO `cbng_reviewer`@`%`'
          mysql -h 127.0.0.1 -u root -e 'GRANT ALL PRIVILEGES ON `test_enwiki_p_%`.* TO `cbng_reviewer`@`%`'
        if: startswith(matrix.target, 'test-')

      - uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.13
          cache: 'pip'

      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python -

      - name: Install python dependencies
        run: poetry install --with test

      - name: Run tox target
        run: poetry run tox --current-env -e ${{ matrix.target }}

  container:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build container
        run: |
          docker run \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v $PWD:/workspace -w /workspace \
            buildpacksio/pack build reviewer --builder heroku/builder:24
